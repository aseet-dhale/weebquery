{"version":3,"sources":["Component/AnimeCards.js","Component/Api.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","cardWidth","minWidth","margin","spacing","media","height","animeName","maxWidth","AnimeCards","props","data","styles","className","Grid","item","xs","Card","CardActionArea","CardMedia","image","attributes","posterImage","original","title","canonicalTitle","CardContent","Typography","variant","titles","en_jp","ja_jp","Api","pageOffset","url","state","axios","get","this","then","resp","setState","catch","error","console","log","map","element","key","id","Box","display","flexWrap","showData","Component","App","CssBaseline","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wVAOMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAK,CACDC,SAAU,IAEdC,UAAW,CACPC,SAAU,IAEVC,OAAQL,EAAMM,QAAQ,IAE1BC,MAAO,CACHC,OAAQ,KAEZC,UAAW,CACPC,SAAU,SAIH,SAASC,EAAWC,GAC/B,IAAMC,EAAOD,EAAMC,KACbC,EAAShB,IAGf,OACI,yBAAKiB,UAAWD,EAAOb,MACnB,kBAACe,EAAA,EAAD,CAAMC,MAAI,EAACC,IAAE,GACT,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAgBL,UAAWD,EAAOX,WAC9B,kBAACkB,EAAA,EAAD,CACIN,UAAWD,EAAOP,MAClBe,MAAOT,EAAKU,WAAWC,YAAYC,SACnCC,MAAOb,EAAKU,WAAWI,iBAG3B,kBAACC,EAAA,EAAD,CAAab,UAAWD,EAAOL,WAC3B,kBAACoB,EAAA,EAAD,CAAYC,QAAQ,WAAW,gCAASjB,EAAKU,WAAWQ,OAAOC,OAA/D,IAA+E,6BAA/E,KAAwFnB,EAAKU,WAAWQ,OAAOE,MAA/G,U,ICebC,E,kDA/CX,WAAYtB,GAAQ,IAAD,8BACf,cAAMA,IAMVuB,WAAa,IAPM,EAQnBC,IARmB,uEAQmD,EAAKD,YALvE,EAAKE,MAAQ,CACTxB,KAAM,IAJK,E,gEASE,IAAD,OAChByB,IAAMC,IAAIC,KAAKJ,KACVK,MACG,SAAAC,GACI,EAAKC,SAAS,CACV9B,KAAM6B,EAAK7B,KAAKA,UAK3B+B,OACG,SAAAC,GACIC,QAAQC,IAAIF,Q,iCASxB,OAFaL,KAAKH,MAAMxB,KACNmC,KAAI,SAACC,GAAD,OAAa,kBAACtC,EAAD,CAAYuC,IAAKD,EAAQE,GAAItC,KAAMoC,S,+BAKtE,OACI,6BACI,kBAACG,EAAA,EAAD,CAAKC,QAAQ,OAAOC,SAAS,QAEpBd,KAAKe,iB,GAxCZC,a,gBCWHC,MAZf,WACE,OACE,yBAAK1C,UAAU,OACb,kBAAC2C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,UCNVC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.305bb7a1.chunk.js","sourcesContent":["import React from 'react'\nimport {\n    Card, CardContent, Typography, makeStyles,\n    Grid, CardMedia, CardActionArea, Box\n} from '@material-ui/core'\n\nconst minH = 300;\nconst useStyles = makeStyles((theme) => ({\n    root:{\n        flexGrow: 0.5,\n    },\n    cardWidth: {\n        minWidth: 150,\n        // height: theme.spacing(20),\n        margin: theme.spacing(1),\n    },\n    media: {\n        height: 250,\n    },\n    animeName: {\n        maxWidth: 200,\n    }\n}));\n\nexport default function AnimeCards(props) {\n    const data = props.data;\n    const styles = useStyles();\n\n\n    return (\n        <div className={styles.root}>\n            <Grid item xs>\n                <Card>\n                    <CardActionArea className={styles.cardWidth}>\n                        <CardMedia\n                            className={styles.media}\n                            image={data.attributes.posterImage.original}\n                            title={data.attributes.canonicalTitle}\n                        />\n\n                        <CardContent className={styles.animeName}>\n                            <Typography variant=\"caption\" ><strong>{data.attributes.titles.en_jp}</strong> <br /> ({data.attributes.titles.ja_jp})</Typography>\n                        </CardContent>\n                    </CardActionArea>\n                </Card>\n            </Grid>\n\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Grid, Box } from '@material-ui/core'\nimport AnimeCards from './AnimeCards'\n\n\n\nclass Api extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            data: [],\n        }\n    }\n    pageOffset = 1000\n    url = `https://kitsu.io/api/edge/anime/?page[limit]=20&page[offset]=${this.pageOffset}`\n    componentDidMount() {\n        axios.get(this.url)\n            .then(\n                resp => {\n                    this.setState({\n                        data: resp.data.data,\n                    })\n                    // console.log(resp.data.data)\n                }\n            )\n            .catch(\n                error => {\n                    console.log(error);\n                }\n            );\n    }\n\n    showData() {\n        // console.log(this.state.data)\n        const data = this.state.data;\n        const list = data.map((element) => <AnimeCards key={element.id} data={element} />)\n        return list\n    }\n\n    render() {\n        return (\n            <div>\n                <Box display=\"flex\" flexWrap=\"wrap\">\n                    {/* <Grid container spacing={1} > */}\n                        {this.showData()}\n                    {/* </Grid> */}\n                </Box>\n            </div>\n        )\n    }\n}\n\n\nexport default Api;\n","import React from 'react';\nimport './App.css';\nimport Api from './Component/Api';\nimport { CssBaseline, Container } from '@material-ui/core';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CssBaseline>\n        <Container>\n          <Api />\n        </Container>\n      </CssBaseline>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}