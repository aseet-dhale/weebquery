{"version":3,"sources":["Component/blackCover.jpg","Component/CountingAnimation.js","Component/CardRatingDetail.js","Component/CardContextDetail.js","Component/CardDetail.js","Component/AnimeCards.js","Component/PageNavigation.js","Component/Api.js","Component/Header.js","App.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","line","height","backgroundColor","getPer","val","temp","parseInt","x","pow","parseFloat","Math","toFixed","CountingAnimation","props","value","precision","style","animation","useSpring","from","lineAnim","width","div","interpolate","className","useStyle","root","flexGrow","display","marginBottom","spacing","avgRating","marginRight","users","CardRatingDetail","data","styles","averageRating","attributes","userCount","favoritesCount","CardContextDetail","title_en_jp","titles","en_jp","title_ja_jp","ja_jp","synopsis","startDate","endDate","Typography","variant","images","flexWrap","justifyContent","margin","backButtonContainer","position","left","borderRadius","cursor","border","cardColor","zIndex","coverImage","objectFit","posterImage","marginTop","maxHeight","setColors","img","Vibrant","getPalette","then","palette","document","getElementById","id","DarkVibrant","getHex","color","LightVibrant","catch","error","console","log","CardDetail","cover","original","onLoad","onClick","toggle","src","alt","cardWidth","minWidth","maxWidth","media","animeName","textAlign","AnimeCards","small","useState","open","set","Box","Grid","item","xs","Card","CardActionArea","CardMedia","image","title","canonicalTitle","alignItems","CardContent","navWidth","constSpace","IconButton","previousPage","fontSize","floor","currentPage","nextPage","Api","pageOffset","pageLimit","url","fetchData","showData","scrollTop","state","bind","this","documentElement","axios","get","resp","setState","map","element","loading","key","PageNavigation","Component","toolbar","mixins","Header","CssBaseline","AppBar","Toolbar","Button","window","location","reload","align","App","Container","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.29da4a87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blackCover.df0397b0.jpg\";","import React from 'react'\nimport { useSpring, animated, useTransition, config } from 'react-spring'\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme)=>({\n    line:{\n        height: 5,\n        backgroundColor: 'black',\n    }\n}));\n\nconst getPer = (val) => {\n    let temp = parseInt(val);\n    let x = 0;\n    while(temp !== 0){\n        temp = parseInt(temp/10);\n        x = x+1;\n    }\n    let pow = parseFloat(Math.pow(10,x));\n    return `${((val/pow)*100).toFixed(2)}%`;\n}\n\nexport default function CountingAnimation(props) {\n    const value = props.value;\n    const precision = props.precision;\n    const style = useStyles();\n    const animation = useSpring({\n        value: parseFloat(value),\n        from: {\n            value: 0,\n        },\n    });\n    const lineAnim = useSpring({\n        width: getPer(value),\n        from:{\n            width: '0%',\n        },\n    });\n    return (\n        <>\n            <animated.div style={animation}>\n                {animation.value.interpolate(x => x.toFixed(precision))}\n            </animated.div>\n            <animated.div style={lineAnim} className={style.line}></animated.div>\n        </>\n    )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core';\nimport CountingAnimation from './CountingAnimation.js';\nimport './AnimeCards.css'\n\nconst useStyle = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        display: 'flex',\n        marginBottom: theme.spacing(4),\n    },\n    avgRating: {\n        marginRight: theme.spacing(4),\n    },\n    users: {\n        marginRight: theme.spacing(4),\n    },\n}));\n\nexport default function CardRatingDetail(props) {\n    const data = props.data;\n    const styles = useStyle();\n    const averageRating = data.attributes.averageRating;\n    const userCount = data.attributes.userCount;\n    const favoritesCount = data.attributes.favoritesCount;\n\n    return (\n        <div className={`${styles.root} counters`} >\n            <div className={styles.avgRating}>\n                Average Rating<CountingAnimation value={averageRating} precision={2} />\n            </div>\n            <div className={styles.users}>\n                #Users<CountingAnimation value={userCount} precision={0} />\n            </div>\n            <div>\n                Favourite<CountingAnimation value={favoritesCount} precision={0} />\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Typography } from \"@material-ui/core\";\nexport default function CardContextDetail(props) {\n    const data = props.data;\n    const title_en_jp = data.attributes.titles.en_jp;\n    const title_ja_jp = data.attributes.titles.ja_jp;\n    const synopsis = data.attributes.synopsis;\n    const startDate = data.attributes.startDate;\n    const endDate = data.attributes.endDate;\n    return (\n        <div>\n            <Typography variant='h4' className='animeName'>{title_en_jp}({title_ja_jp})</Typography>\n            <Typography variant='body1' >\n                {synopsis}\n            </Typography>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { makeStyles, Container, Box, Typography, IconButton } from '@material-ui/core';\nimport { findAllByPlaceholderText } from '@testing-library/react';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport './AnimeCards.css'\nimport temp from './blackCover.jpg'\nimport * as Vibrant from 'node-vibrant'\nimport CardRatingDetail from './CardRatingDetail';\nimport CardContextDetail from './CardContextDetail';\n\nconst useStyle = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        width: '100vw',\n        height: '100vh',\n    },\n    images: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        margin: 0,\n        height: 400,\n    },\n    backButtonContainer: {\n        position: 'absolute',\n        left: 0,\n        width: 40,\n        height: 40,\n        borderRadius: '50%',\n        cursor: 'pointer',\n        border: 'none',\n        backgroundColor: 'white',\n        margin: theme.spacing(1),\n    },\n    // backButton: {\n    //     backgroundColor: 'white',\n    // }\n    // ,\n    cardColor: {\n        position: 'absolute',\n        left: 0,\n        width: '100%',\n        zIndex: -999,\n        height: '100%',\n    },\n    coverImage: {\n        position: \"absolute\",\n        width: \"100%\",\n        height: 300,\n        objectFit: \"cover\",\n        zIndex: -1,\n    },\n    posterImage: {\n        marginTop: theme.spacing(6),\n        position: \"absolute\",\n        display: \"block\",\n        maxHeight: 300,\n        borderRadius: '2%',\n    }\n}));\n\nconst setColors = (img,data) => {\n    Vibrant.from('https://cors-anywhere.herokuapp.com/' + img).getPalette()\n        .then((palette) => {\n            document.getElementById(`cards + ${data.id}`).style.backgroundColor = palette.DarkVibrant.getHex();\n            document.getElementById(`cardsTitle + ${data.id}`).style.color = palette.LightVibrant.getHex();\n            // console.log(palette.Vibrant._rgb)\n        })\n        .catch(error => console.log(error));\n}\n\n\nexport default function CardDetail(props) {\n    const data = props.data;\n    const styles = useStyle();\n    const img = data.attributes.posterImage.original;\n    let cover;\n    try {\n        cover = data.attributes.coverImage.original;\n    } catch (error) {\n        cover = temp;   \n    }\n    return (\n        <div className={styles.root} id={`cardsTitle + ${data.id}`} onLoad={setColors(img,data)}>\n            <div id={`cards + ${data.id}`} className={styles.cardColor}></div>\n            <div className={styles.images}>\n                <button className={styles.backButtonContainer} onClick={() => props.toggle()}>\n                    <ArrowBackIosIcon />\n                </button>\n                <img src={cover} alt=\"\" className={styles.coverImage} />\n                <img src={img} alt=\"\" className={styles.posterImage} />\n            </div>\n            <CardRatingDetail data={data} />\n            <CardContextDetail data={data} />\n        </div>\n    )\n}\n","import React, { useRef, useState } from 'react'\nimport {\n    Card, CardContent, Typography, makeStyles,\n    Grid, CardMedia, CardActionArea, Box\n} from '@material-ui/core'\nimport './AnimeCards.css'\nimport * as Vibrant from 'node-vibrant'\nimport { useChain, animated, useSpring, config, useTransition } from 'react-spring'\nimport CardDetail from './CardDetail'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        margin: theme.spacing(1),\n    },\n    cardWidth: {\n        minWidth: 150,\n        maxWidth: 400,\n        // height: theme.spacing(20),\n        // margin: theme.spacing(1),\n    },\n    media: {\n        height: 250,\n        maxWidth: 400,\n    },\n    animeName: {\n        maxWidth: 300,//Very important for responsive behaviour\n        textAlign: \"center\",\n    }\n}));\n\n// function getVibrant(img, data) {\n\n// }\nexport default function AnimeCards(props) {\n    const data = props.data;\n    const styles = useStyles();\n    const img = data.attributes.posterImage.small;\n    const [open, set] = useState(false);\n    function toggle() {\n        set(open => !open);\n    }\n    // const fadeIN = useSpring({ opacity: 1, from: { opacity: 0 } });\n    /*\n        Trying card opening\n    */\n    // const [open, set] = useState(false)\n    // const springRef = useRef()\n    // const { size, opacity, ...rest } = useSpring({\n    //     ref: springRef,\n    //     config: config.stiff,\n    //     from: { size: '20% !important', background: 'hotpink !important' },\n    //     to: { size: open ? '100% !important' : '20% !important', background: open ? 'white !important' : 'hotpink !important' }\n    // })\n    // const transRef = useRef()\n    // const transitions = useTransition(open ? data : data, {\n    //     ref: transRef,\n    //     unique: true,\n    //     trail: 400,\n    //     from: { opacity: 0, transform: 'scale(0)' },\n    //     enter: { opacity: 1, transform: 'scale(1)' },\n    //     leave: { opacity: 0, transform: 'scale(0)' }\n    // })\n    // This will orchestrate the two animations above, comment the last arg and it creates a sequence\n    // useChain(open ? [springRef, transRef] : [transRef, springRef], [0, open ? 0.1 : 0.6])\n\n    /*\n    Ends Here\n    */\n\n\n    return (\n        !open ? (<div className={styles.root}>\n            <Box display=\"flex\" justifyContent=\"center\" >\n                <Grid item xs>\n                    <Card className={styles.cardWidth}>\n                        <CardActionArea\n                            onClick={() => toggle()}\n                        >\n                            <div>\n                                <CardMedia\n                                    className={styles.media}\n                                    image={img}\n                                    title={data.attributes.canonicalTitle}\n                                />\n                                <Box\n                                    display=\"flex\"\n                                    justifyContent=\"center\"\n                                    alignItems=\"center\"\n                                >\n                                    <CardContent\n                                        className={styles.animeName}\n                                    >\n                                        <Typography variant=\"caption\" className='animeName' color=\"inherit\">\n                                            <strong>{data.attributes.titles.en_jp}</strong> <br /> ({data.attributes.titles.ja_jp})\n                                        </Typography>\n                                    </CardContent>\n                                </Box>\n                            </div>\n\n                        </CardActionArea>\n                    </Card>\n                </Grid>\n            </Box>\n        </div>) : (<CardDetail data={data} toggle={toggle} />)\n    )\n}\n","import React from 'react'\nimport { makeStyles, Box, IconButton } from '@material-ui/core'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    navWidth: {\n        width: 150,\n        justifyContent: \"space-between\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    constSpace: {\n        margin: theme.spacing(5)\n    }\n}));\n\nexport default function (props) {\n    const styles = useStyles();\n    return (\n        <div>\n            <div className={styles.constSpace} />\n            <div className={styles.root}>\n                <Box display=\"flex\" justifyContent=\"center\">\n                    <div className={styles.navWidth}>\n                        <IconButton onClick={()=>{props.previousPage()}}>\n                            <ArrowBackIcon fontSize=\"large\" color=\"secondary\" />\n                        </IconButton>\n                        <strong>{Math.floor(props.currentPage/20) + 1}</strong>\n                        <IconButton onClick={()=>{props.nextPage()}}>\n                            <ArrowForwardIcon fontSize=\"large\" color=\"secondary\" />\n                        </IconButton>\n                    </div>\n                </Box>\n            </div>\n            <div className={styles.constSpace} />\n        </div>\n\n    )\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Box } from '@material-ui/core'\nimport AnimeCards from './AnimeCards'\nimport PageNavigation from './PageNavigation'\n\n\n\nclass Api extends Component {\n    pageOffset = 0;\n    pageLimit = 20;\n    url = `https://kitsu.io/api/edge/anime/?page[limit]=${this.pageLimit}&page[offset]=${this.pageOffset}`;\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: [],\n        }\n        this.showData = this.showData.bind(this)\n        this.fetchData = this.fetchData.bind(this)\n    }\n\n\n    componentDidMount() {\n        this.fetchData()\n    }\n\n    scrollTop(){\n        document.documentElement.scrollTop = 0;\n    }\n\n    fetchData() {\n        axios.get(this.url)\n            .then(\n                resp => {\n                    this.setState({\n                        data: resp.data.data,\n                    })\n                    // console.log(this.url)\n                }\n            )\n            .catch(\n                error => {\n                    console.log(error);\n                }\n            );\n    }\n\n    previousPage = () => {\n        // console.log(\"pre\")\n        // console.log(this.pageOffset)\n        if (this.pageOffset > 0) {\n            this.pageOffset = this.pageOffset - this.pageLimit;\n            this.url = `https://kitsu.io/api/edge/anime/?page[limit]=${this.pageLimit}&page[offset]=${this.pageOffset}`;\n            this.fetchData()\n            this.showData()\n            this.scrollTop()\n        }\n        // console.log(this.pageOffset)\n    }\n\n    nextPage = () => {\n        // console.log(\"next\")\n        // console.log(this.pageOffset)\n        if (this.pageOffset < 12000) {\n            this.pageOffset = this.pageOffset + this.pageLimit;\n            this.url = `https://kitsu.io/api/edge/anime/?page[limit]=${this.pageLimit}&page[offset]=${this.pageOffset}`;\n            this.fetchData()\n            this.showData()\n            this.scrollTop()\n        }\n        // console.log(this.pageOffset)\n\n    }\n\n    showData() {\n        // console.log(this.state.data)\n        const data = this.state.data;\n        const list = data.map((element) => <AnimeCards loading key={element.id} data={element} />)\n        return list\n    }\n\n    render() {\n        return (\n            <div>\n                <Box display=\"flex\" flexWrap=\"wrap\">\n                    {/* <Grid container spacing={1} > */}\n                    {this.showData()}\n                    {/* </Grid> */}\n                </Box>\n                <PageNavigation currentPage={this.pageOffset} nextPage={this.nextPage} previousPage={this.previousPage} />\n            </div>\n        )\n    }\n}\n\n\nexport default Api;","import React from 'react'\nimport { Toolbar, AppBar, makeStyles, CssBaseline, Typography, Button } from '@material-ui/core'\nimport './Header.css'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    toolbar: theme.mixins.toolbar,\n}));\n\nexport default function Header() {\n    const styles = useStyles();\n    return (\n        <div>\n            <CssBaseline>\n                <AppBar position=\"static\" className=\"appBarCustom\">\n                    <Toolbar className={styles.toolbar} >\n                        <Button onClick ={() => window.location.reload()}>\n                            <Typography align=\"center\" className=\"weebquuery-name\" variant=\"h6\">\n                                <strong>WeebQuery</strong>\n                            </Typography>\n                        </Button>\n                    </Toolbar>\n                </AppBar>\n            </CssBaseline>\n        </div>\n    )\n}\n","import React from 'react';\nimport Api from './Component/Api';\nimport { CssBaseline, Container } from '@material-ui/core';\nimport Header from './Component/Header';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CssBaseline>\n        <Header />\n        <Container>\n          <Api />\n        </Container>\n      </CssBaseline>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}